<metro:MetroWindow
    x:Class="ZoeProg.Views.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:ZoeProg.Common;assembly=ZoeProg.Common"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:prism="http://prismlibrary.com/"
    Title="{Binding Title}"
    Width="1225"
    Height="550"
    prism:ViewModelLocator.AutoWireViewModel="True"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto">
    <Window.Background>
        <ImageBrush ImageSource="/images/background.love.jpg" />
    </Window.Background>
    <metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <StackPanel Height="100" Orientation="Horizontal">
                <TextBlock Margin="5,5" Text="{Binding}" />
                <TextBlock Margin="5,5" Text="{Binding ElementName=HamburgerMenuControl}" />
                <TextBlock Text="{Binding DataContext.ActivatedItem.Label, RelativeSource={RelativeSource AncestorType={x:Type metro:MetroWindow}}}" />
            </StackPanel>
        </DataTemplate>
    </metro:MetroWindow.TitleTemplate>
    <metro:MetroContentControl>
        <metro:HamburgerMenu
            x:Name="HamburgerMenuControl"
            DisplayMode="CompactInline"
            Foreground="White"
            IsPaneOpen="{Binding IsPaneOpen}"
            SelectedIndex="0"
            SelectedItem="{Binding ActivatedItem}">
            <metro:HamburgerMenu.OptionsItemTemplate>
                <DataTemplate DataType="{x:Type metro:HamburgerMenuGlyphItem}">
                    <Grid Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="16"
                            Foreground="White"
                            Text="{Binding Glyph}" />
                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="White"
                            Text="{Binding Label}" />
                    </Grid>
                </DataTemplate>
            </metro:HamburgerMenu.OptionsItemTemplate>

            <metro:HamburgerMenu.ItemTemplate>
                <DataTemplate DataType="{x:Type metro:HamburgerMenuGlyphItem}">
                    <Grid Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="16"
                            Foreground="White"
                            Text="{Binding Glyph}"
                            Visibility="Visible" />

                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="White"
                            Text="{Binding Label}" />
                    </Grid>
                </DataTemplate>
            </metro:HamburgerMenu.ItemTemplate>

            <!--  Ghis:This is the first property of HamburgerMenu Say something  -->
            <metro:HamburgerMenu.ItemsSource>
                <metro:HamburgerMenuItemCollection prism:RegionManager.RegionName="{x:Static common:RegionNames.HamburgerMenuItemCollectionRegion}" />
            </metro:HamburgerMenu.ItemsSource>

            <!--  Ghislain: HamburgerMenu OptionsItemsSource Poerty to store all OptionsItems  -->
            <metro:HamburgerMenu.OptionsItemsSource>
                <metro:HamburgerMenuItemCollection>
                    <metro:HamburgerMenuGlyphItem
                        Glyph="&#xE946;"
                        Label="About"
                        Tag="About" />
                </metro:HamburgerMenuItemCollection>
            </metro:HamburgerMenu.OptionsItemsSource>

            <metro:HamburgerMenu.ContentTemplate>
                <DataTemplate>
                    <DockPanel>

                        <Border
                            MinHeight="30"
                            Background="#FF444444"
                            DockPanel.Dock="Top">
                            <TextBlock
                                x:Name="Header"
                                Margin="20,0"
                                HorizontalAlignment="Center"
                                Foreground="Red"
                                Text="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:HamburgerMenuGlyphItem}}}" />
                        </Border>

                        <!--  TODO: Can you explain how this works with blackbox principle? So hard 4 hours  -->
                        <metro:TransitioningContentControl
                            x:Name="ActiveItem"
                            Content="{Binding DataContext.ActivatedItem.Tag, RelativeSource={RelativeSource AncestorType={x:Type metro:MetroWindow}}}"
                            Transition="LeftReplace" />
                    </DockPanel>
                </DataTemplate>
            </metro:HamburgerMenu.ContentTemplate>
        </metro:HamburgerMenu>
    </metro:MetroContentControl>
</metro:MetroWindow>

<!--    <TabControl prism:RegionManager.RegionName="{x:Static common:RegionNames.TabRegion}">

                <TabControl.Style>
                    <Style TargetType="TabControl">
                        <Setter Property="TabStripPlacement" Value="Left" />
                        <Setter Property="Background" Value="Transparent" />

                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="TabItem">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TabItem">
                                                <Border
                                                    Name="Border"
                                                    Margin="0,0,0,0"
                                                    Background="Transparent"
                                                    BorderBrush="Black"
                                                    BorderThickness="1,1,1,1"
                                                    CornerRadius="5">
                                                    <ContentPresenter ContentSource="Header" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Panel.ZIndex" Value="100" />
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                                        <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                                        <Setter Property="Foreground" Value="DarkGray" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">

                                                    <TextBlock
                                                        Margin="20,0"
                                                        VerticalAlignment="Center"
                                                        FontSize="17"
                                                        Text="{Binding DataContext.Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Style>
            </TabControl>-->