name: New .NET Desktop

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on:
      windows-latest # For a list of available runner types, refer to
      # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      working-directory: ./src
      Solution_Name: ZoeProg.sln # Replace with your solution name, i.e. MyWpfApp.sln.
      # Test_Project_Path: your-test-project-path # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
    #  Wap_Project_Directory: your-wap-project-directory-name # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
    # Wap_Project_Path: your-wap-project-path # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
      - name: Before Checkout
        run: echo Ghislain says---> Hello World ${{ env.Solution_Name }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET6.0  [Preview version]
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true

      # Display info about working directory
      - name: Display info about working directory
        run: dir

      # Show how to call PowerShell script with a GithubActions workflow!
      - name: Build Solution From Powershell-Script(build.ps1)
        shell: pwsh
        run: |
          .\build.ps1

        # Execute  solution
      - name: Build Solution From directly from dotnet command(dotnet build -v diag)
        run: dotnet build -v diag
        working-directory: ${{env.working-directory}}
